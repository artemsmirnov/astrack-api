swagger: '2.0'
schemes:
    - https
host: localhost
basePath: /api

consumes: [application/json]
produces: [application/json]

info:
    title: 'astrack api'
    version: 1.0.0
tags:
  - name: user
    description: User operations
  - name: activity
    description: Activity management

securityDefinitions:
    accessToken:
        type: apiKey
        name: Access-Token
        in: header

paths:
    /users/singup:
        post:
            tags: [user]
            summary: Sign up
            operationId: userSignUp
            parameters:
              - in: body
                name: body
                schema:
                    type: object
                    required: [username, password]
                    properties:
                        username:
                            type: string
                        password:
                            type: string
                    example:
                        username: fubar
                        password: catKeyboard
            responses:
                '201':
                    description: 'Created'
                    schema:
                        type: object
                        properties:
                            accessToken:
                                type: string
                            user:
                                $ref: '#/definitions/User'
                    examples:
                        application/json:
                            accessToken: 9ud2h8u4h082hc2u8hd082h48248hc084h
                            user:
                                username: fubar
                '400':
                    $ref: '#/responses/InvalidInput'
                '422':
                    description: 'Username is taken'
                    schema:
                        $ref: '#/definitions/GenericError'
                    examples:
                        application/json:
                            error: username_is_taken
    /users/signin:
        post:
            tags: [user]
            summary: Sign in
            operationId: userSignIn
            parameters:
              - in: body
                name: body
                schema:
                    type: object
                    required: [username, password]
                    properties:
                        username:
                            type: string
                        password:
                            type: string                
                    example:
                        username: fubar
                        password: catKeyboard
            responses:
                '200':
                    description: 'Signed in'
                    schema:
                        type: object
                        properties:
                            accessToken:
                                type: string
                            user:
                                $ref: '#/definitions/User'
                    examples:
                        application/json:
                            accessToken: 20h0y29f94fy9f2394fy23gf49423
                            user:
                                username: fubar
                '404':
                    $ref: '#/responses/NotFound'
    /users/me:
        get:
            tags: [user]
            summary: Get current user
            operationId: userGetMe
            security:
              - accessToken: []
            responses:
                '200':
                    schema:
                        type: object
                        properties:
                            user:
                                $ref: '#/definitions/User'
                    examples:
                        application/json:
                            user:
                                username: fubar

    /activities:
        get:
            tags: [activity]
            summary: Get activities
            operationId: activityIndex
            security:
              - accessToken: []
            responses:
                '200':
                    schema:
                        type: object
                        properties:
                            activities:
                                type: array
                                items:
                                    $ref: '#/definitions/Activity'
                    examples:
                        application/json:
                            activities:
                              - id: 1
                                name: 'PR-1'
                                logs:
                                  - id: 1
                                    date: 1200
                                    duration: 500
                                    summary: 'Nothing'
                                  - id: 2
                                    date: 2000
                                    duration: 300
        post:
            tags: [activity]
            summary: Create activity
            operationId: activityNew
            security:
              - accessToken: []
            parameters:
              - in: body
                name: body
                required: true
                schema:
                    type: object
                    required: [activity]
                    properties:
                        name:
                            type: string
                    example:
                        name: 'PR-1'
            responses:
                '201':
                    description: 'Created'
                    schema:
                        type: object
                        properties:
                            activity:
                                $ref: '#/definitions/Activity'
                    examples:
                        application/json:
                            activity:
                                id: 1
                                name: 'PR-1'
                                logs: []
                '400':
                    $ref: '#/responses/InvalidInput'

    /activities/{activityId}:
        delete:
            tags: [activity]
            summary: Delete activity
            operationId: activityDelete
            security:
              - accessToken: []
            parameters:
              - in: path
                name: activityId
                type: number
            responses:
                '200':
                    description: 'Deleted'

    /activities/{activityId}/logs:
        post:
            tags: [activity]
            summary: Create activity log
            operationId: activityLogNew
            security:
              - accessToken: []
            parameters:
              - in: path
                name: activityId
                type: number
              - in: body
                name: body
                required: true
                schema:
                    type: object
                    required: [date, duration]
                    properties:
                        summary:
                            type: string
                        date:
                            type: number
                        duration:
                            type: number
                    example:
                        summary: 'Some work'
                        date: 1000
                        duration: 500
            responses:
                '201':
                    description: 'Logged'
                    schema:
                        type: object
                        properties:
                            activity:
                                $ref: '#/definitions/Activity'
                    examples:
                        application/json:
                            activity:
                                id: 1
                                name: 'PR-1'
                                logs:
                                  - id: 1
                                    summary: 'Some work'
                                    date: 1000
                                    duration: 500


    /activities/{activityId}/logs/{logId}:
        delete:
            tags: [activity]
            summary: Delete activity log
            operationId: activityLogDelete
            security:
              - accessToken: []
            parameters:
              - in: path
                name: activityId
                type: number
              - in: path
                name: logId
                type: number
            responses:
                '200':
                    description: 'Deleted'

responses:
    NotFound:
        description: Entity not found
        schema:
            $ref: '#/definitions/GenericError'
        examples:
            application/json:
                error: not_found
    InvalidInput:
        description: Invalid input for operation
        schema:
            $ref: '#/definitions/InvalidInputError'
        examples:
            application/json:
                error: invalid_input
                errors:
                  - dataPath: '.username'
                    keyword: 'pattern'
                    message: 'should match pattern "^\\w{4,255}$"'
                    params:
                        pattern: '^\\w{4,255}$'

definitions:
    User:
        type: object
        properties:
            username:
                type: string
    Activity:
        type: object
        properties:
            id:
                type: number
            name:
                type: string
            logs:
                type: array
                items:
                    type: object
                    properties:
                        id:
                            type: number
                        summary:
                            type: string
                        date:
                            type: number
                        duration:
                            type: number
    GenericError:
        type: object
        properties:
            error:
                type: string
    InvalidInputError:
        type: object
        properties:
            error:
                type: string
            errors:
                type: array
                items:
                    type: object`